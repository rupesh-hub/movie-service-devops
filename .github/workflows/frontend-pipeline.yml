name: FRONTEND PIPELINE
on:
  push:
    branches:
      - main
    paths:
      - frontend/**
      - docker/frontend/**
      - docker-compose.yml
      - .github/workflows/frontend-*.yml

env:
  DEPLOY_FOLDER: ci-cd
  COMPOSE_FILE: docker-compose.yml

jobs:
  build-image:
    runs-on: self-hosted
    name: Build frontend docker image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract project version
        id: project-version
        run: |
          cd frontend
          echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: frontend
          file: docker/frontend/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/frontend:${{ steps.project-version.outputs.VERSION }}
            ${{ secrets.DOCKER_USERNAME }}/frontend:latest

  deploy:
    name: Deploy frontend
    runs-on: self-hosted
    needs: [ build-image ]
    steps:
      - name: Add ssh key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AZURE_SECRET_KEY }}

      - name: Debug Docker environment
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_IP }} <<EOF
            docker --version
            docker-compose --version
            docker images
            docker ps -a
            docker volume ls
          EOF

      - name: Create deployment folder
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_IP }} \
            "mkdir -p ${{ env.DEPLOY_FOLDER }}"

      - name: Copy compose file
        run: |
          scp ${{ env.COMPOSE_FILE }} \
            ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_IP }}:${{ env.DEPLOY_FOLDER }}/${{ env.COMPOSE_FILE }}

      - name: Set ENV variable and deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_IP }} <<EOF
            cd ${{ env.DEPLOY_FOLDER }}
            docker-compose down
            docker-compose pull -q
            docker-compose up -d
          EOF